openapi: 3.0.3
info:
  title: Social Media Content Relevance API
  description: AI-powered service that analyzes social media post content and provides relevance scores for any configured topic (e.g., raincoat, sunscreen, umbrella) using OpenAI's GPT-4 and GPT-4 Vision models.
  version: 1.1.0
  contact:
    name: API Support

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the service
      operationId: healthCheck
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-07-19T00:00:00"
                  version:
                    type: string
                    example: "1.0.0"
                  openai_status:
                    type: string
                    example: "ready"

  /analyze:
    post:
      summary: Analyze social media post content
      description: Analyzes social media post content and provides a relevance score for any configured topic (e.g., raincoat, sunscreen, umbrella)
      operationId: analyzePost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                topic:
                  type: string
                  description: The topic to analyze relevance for (e.g., "raincoat", "sunscreen", "umbrella"). If omitted, the default topic is used.
                  example: "raincoat"
                content:
                  type: object
                  properties:
                    caption:
                      type: string
                      description: The text content/caption of the social media post
                      example: "Perfect day for raincoats! Kids love splashing in puddles while staying dry."
                    hashtags:
                      type: array
                      items:
                        type: string
                      description: List of hashtags from the post
                      example: ["#raincoat", "#weatherproof", "#kids", "#rain"]
                    image_urls:
                      type: array
                      items:
                        type: string
                        format: uri
                      description: List of image URLs from the post
                      example: ["https://media.istockphoto.com/id/498334211/photo/they-love-the-rain.jpg?s=1024x1024&w=is&k=20&c=85_bih2WUanuUYw4OdICEm5-AkSJAX39DVJgjojSkF8="]
                  required:
                    - caption
              required:
                - content
            example:
              topic: "raincoat"
              content:
                caption: "Perfect day for raincoats! Kids love splashing in puddles while staying dry."
                hashtags: ["#raincoat", "#weatherproof", "#kids", "#rain"]
                image_urls: ["https://media.istockphoto.com/id/498334211/photo/they-love-the-rain.jpg?s=1024x1024&w=is&k=20&c=85_bih2WUanuUYw4OdICEm5-AkSJAX39DVJgjojSkF8="]
      responses:
        '200':
          description: Analysis completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  relevance_score:
                    type: integer
                    minimum: 0
                    maximum: 100
                    description: Relevance score for the requested topic (0-100)
                    example: 87
                  confidence:
                    type: number
                    format: float
                    minimum: 0
                    maximum: 1
                    description: Confidence level of the analysis (0-1)
                    example: 0.92
                  analysis:
                    type: object
                    description: Detailed analysis breakdown
                    properties:
                      text_score:
                        type: integer
                        minimum: 0
                        maximum: 100
                        description: Score based on text analysis only
                        example: 95
                      visual_score:
                        type: integer
                        minimum: 0
                        maximum: 100
                        description: Score based on image analysis only
                        example: 78
                      reasoning:
                        type: string
                        description: Explanation of how the score was determined
                        example: "Strong textual indication with explicit raincoat mention and weather context. Visual analysis confirms presence of raincoat in images."
                      detected_elements:
                        type: array
                        items:
                          type: string
                        description: List of elements that contributed to the score
                        example: ["Direct raincoat mention in caption", "Weather-related hashtags", "Yellow raincoat visible in image", "Rainy weather context"]
                  processing_time_ms:
                    type: integer
                    description: Processing time in milliseconds
                    example: 1247
        '400':
          description: Bad request - invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Invalid request format"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Analysis failed: OpenAI API error"
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Service not ready"

components:
  schemas:
    PostContent:
      type: object
      properties:
        caption:
          type: string
          description: The text content/caption of the social media post
        hashtags:
          type: array
          items:
            type: string
          description: List of hashtags from the post
        image_urls:
          type: array
          items:
            type: string
            format: uri
          description: List of image URLs from the post
      required:
        - caption
